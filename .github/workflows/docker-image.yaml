name: ci

on:
  push:
    branches:
      - "main"
  pull_request:
    branches:
      - "main"
  schedule:
    - cron: '0 */6 * * *'
  workflow_dispatch:

permissions:
  contents: write

env:
  REGISTRY: docker.io  
  IMAGE_NAME: casraw/astrix-node-docker
  SHA: ${{ github.sha }}
  COMPARE_TAG: latest
  DOCKER_CONTENT_TRUST: 1
  DOCKER_CONTENT_TRUST_ROOT_PASSPHRASE: ${{ secrets.DOCKER_CONTENT_TRUST_ROOT_PASSPHRASE }}
  DOCKER_CONTENT_TRUST_REPOSITORY_PASSPHRASE: ${{ secrets.DOCKER_CONTENT_TRUST_REPOSITORY_PASSPHRASE }}

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout your repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Check for upstream changes
        run: |
          git remote add upstream https://github.com/astrix-network/astrix-node.git
          git fetch upstream

          UPSTREAM_LATEST_COMMIT=$(git rev-parse upstream/main)

          if [ -f upstream-latest.txt ]; then
            LAST_SAVED_COMMIT=$(cat upstream-latest.txt)
          else
            LAST_SAVED_COMMIT=""
          fi

          if [[ "${{ github.event_name }}" != "schedule" ]]; then
            echo "Workflow was triggered from this repository (push, PR, or manual). Proceeding with build."
          elif [ "$UPSTREAM_LATEST_COMMIT" = "$LAST_SAVED_COMMIT" ]; then
            echo "No changes in upstream and triggered by schedule. Skipping build."
            exit 0
          else
            echo "Changes detected in upstream. Proceeding with build."
          fi

          echo $UPSTREAM_LATEST_COMMIT > upstream-latest.txt
      - name: Commit and push upstream-latest.txt
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          if git diff --quiet; then
            echo "No changes to commit"
          else
            git add upstream-latest.txt
            git commit -m "Update upstream latest commit hash"
            git push origin main
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PAT }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          version: "lab:latest"
          driver: cloud
          endpoint: "casraw/allgemein"
          install: true
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v4.4.0
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          labels: |
            org.opencontainers.image.revision=${{ env.SHA }}
          tags: |
            type=edge,branch=$repo.default_branch
            type=semver,pattern=v{{version}}
            type=sha,prefix=,suffix=,format=short
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v6
        with:
          platforms: linux/amd64,linux/arm/v7,linux/arm64/v8,linux/ppc64le,linux/riscv64,linux/s390x
          context: .
          sbom: true
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=registry,ref=casraw/astrix-node-docker:buildcache
          cache-to: type=registry,ref=casraw/astrix-node-docker:buildcache,mode=max
          outputs: ${{ github.event_name == 'pull_request' && 'type=cacheonly' || 'type=registry,push=true' }}
          provenance: mode=max
      - name: Build and push commit-specific image
        uses: docker/build-push-action@v6
        with:
          platforms: linux/amd64,linux/arm/v7,linux/arm64/v8,linux/ppc64le,linux/riscv64,linux/s390x
          context: .
          sbom: true
          push: true
          tags: "casraw/astrix-node-docker:${{ github.sha }}"
          cache-from: type=registry,ref=casraw/astrix-node-docker:buildcache
          cache-to: type=registry,ref=casraw/astrix-node-docker:buildcache,mode=max
          outputs: ${{ github.event_name == 'pull_request' && 'type=cacheonly' || 'type=registry,push=true' }}
          provenance: mode=max

#      - name: Enable Docker Content Trust (DCT)
#        run: |
#          export DOCKER_CONTENT_TRUST=1
#          docker pull casraw/astrix-node-docker:latest

#      - name: Install Syft for SBoM generation
#        run: curl -sSfL https://raw.githubusercontent.com/anchore/syft/main/install.sh | sh -s -- -b /usr/local/bin
#      - name: Generate SBoM for the Docker image
#        run: syft casraw/astrix-node-docker:latest -o json > sbom.json
#      - name: Upload SBoM artifact
#        uses: actions/upload-artifact@v4
#        with:
#          name: sbom
#          path: sbom.json
      - name: Update Docker Hub description
        uses: peter-evans/dockerhub-description@v2
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PAT }}
          repository: casraw/astrix-node-docker
#          readme-filepath: ./README.md

#      - name: Docker Scout
#        id: docker-scout
#        if: ${{ github.event_name == 'pull_request' }}
#        uses: docker/scout-action@v1
#        with:
#          command: compare
#          image: ${{ steps.meta.outputs.tags }}
#          to: casraw/astrix-node-docker:latest
#          ignore-unchanged: true
#          only-severities: critical,high
#          write-comment: true
#          github-token: ${{ secrets.TOKEN }}
